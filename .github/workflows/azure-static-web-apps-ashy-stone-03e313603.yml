name: Deploy Angular Frontend and NestJS Backend to Azure

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build Applications
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: Install dependencies and build
        run: |
          npm install
          npm run build --prod

      - name: Zip artifacts for deployment
        run: |
          echo ${GITHUB_WORKSPACE}
          cd ${GITHUB_WORKSPACE}/dist/apps/data-api/ && zip ${GITHUB_WORKSPACE}/data-api-release.zip ./* -r
          cd ${GITHUB_WORKSPACE}/dist/apps/my-app/ && zip ${GITHUB_WORKSPACE}/my-app-release.zip ./* -r

      - name: Upload Angular frontend artifact
        uses: actions/upload-artifact@v3
        with:
          name: my-app
          path: my-app-release.zip

      - name: Upload NestJS backend artifact
        uses: actions/upload-artifact@v3
        with:
          name: data-api
          path: data-api-release.zip

  deploy-frontend:
    runs-on: ubuntu-latest
    needs: build
    name: Deploy Angular Frontend
    steps:
      - name: Download Angular artifact
        uses: actions/download-artifact@v3
        with:
          name: my-app

      - name: Unzip Angular artifact
        run: unzip my-app-release.zip

      - name: Deploy to Azure Static Web Apps
        id: deploy-frontend
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_ASHY_STONE_03E313603 }}
          app_location: "apps/my-app" # Controleer de map van je Angular app
          output_location: "dist/apps/my-app" # Controleer de output map
          api_location: "" # Leeg laten als je geen Azure Function API gebruikt

  deploy-backend:
    runs-on: ubuntu-latest
    needs: build
    name: Deploy NestJS Backend
    steps:
      - name: Download NestJS artifact
        uses: actions/download-artifact@v3
        with:
          name: data-api

      - name: Unzip NestJS artifact
        run: unzip data-api-release.zip

      - name: Install dependencies
        run: npm install

      - name: Deploy NestJS to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'books-data-api' # Naam van je Azure App Service voor de backend
          publish-profile: ${{ secrets.BACKEND_API }}
          package: .
