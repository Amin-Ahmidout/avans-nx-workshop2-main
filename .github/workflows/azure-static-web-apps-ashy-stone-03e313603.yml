name: Azure Static Web Apps CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main

jobs:
  build_and_deploy_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    permissions:
       id-token: write
       contents: read
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          lfs: false
      - name: Install OIDC Client from Core Package
        run: npm install @actions/core@1.6.0 @actions/http-client
      - name: Get Id Token
        uses: actions/github-script@v6
        id: idtoken
        with:
           script: |
               const coredemo = require('@actions/core')
               return await coredemo.getIDToken()
           result-encoding: string
      - name: Build Angular App
        run: |
          npm install
          npm run build --if-present
      - name: Deploy Angular Frontend
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_ASHY_STONE_03E313603 }}
          action: "upload"
          app_location: "dist/apps/my-app" # Built app content directory
          api_location: "" # No API location for frontend
          output_location: "dist/apps/my-app"
          github_id_token: ${{ steps.idtoken.outputs.result }}

  deploy_backend_job:
    runs-on: ubuntu-latest
    name: Deploy NestJS Backend
    needs: build_and_deploy_job
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
      - name: Install Dependencies
        run: |
          cd apps/data-api
          npm install
      - name: Build NestJS Backend
        run: |
          cd apps/data-api
          npm run build
      - name: Zip Backend Files
        run: |
          cd dist/apps/data-api
          zip -r ../../data-api.zip .
      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'books-data-api' # Replace with your Azure Web App name
          slot-name: 'production' # Optional: Use if deploying to a specific slot
          publish-profile: ${{ secrets.NEXTJS_PUBLISHPROFILE }} # Add publish profile secret
          package: 'dist/apps/data-api'
          
